name: lint-and-test

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  checks: write
  contents: read

jobs:
  # warmgocache warms up the go cache by running a compile only test run.
  warmgocache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: 1.19
          cache: true

      # Run a fake test run to compile all the dependencies so that they get loaded into the cache
      - run: |
          go test -v -run TestFoo ./...

  golangci:
    name: lint
    runs-on: ubuntu-latest
    needs: warmgocache
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: 1.19

      - name: golangci-lint
        uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5 # v3.4.0
        with:
          version: v1.52.0
          args: --timeout 10m0s

  # Run go test
  testgo:
    runs-on: ubuntu-latest
    needs: warmgocache
    permissions:
      id-token: write
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: 1.19
          cache: true

      - name: install go-junit-report
        run: |
          go install github.com/jstemmer/go-junit-report/v2@v2.0.0

      # Need to login to docker for testing against remote repos
      - name: Login to test GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Login to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: masoukishi
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: test
        run: |
          2>&1 go test -v ./... | tee testout.txt
          cat testout.txt | go-junit-report -set-exit-code > report.xml
        env:
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: report
        uses: mikepenz/action-junit-report@7210fead7f92f6395c37241964df3b0f730f5e4e # v3.7.1
        if: always()
        with:
          report_paths: "report.xml"
          check_name: "go test Report"


  goreleaser:
    name: check goreleaser
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - uses: goreleaser/goreleaser-action@f82d6c1c344bcacabba2c841718984797f664a6b # v4.2.0
        with:
          distribution: goreleaser
          version: latest
          args: check

  dryrelease:
    name: dry run release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: "lts/*"

      - name: Dry run release
        run: |
          npm install @semantic-release/exec
          npx -y semantic-release@v19 --dry-run
